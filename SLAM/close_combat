#!/usr/bin/env python
import rospy
import numpy as np
import math
import sys
from sensor_msgs.msg import LaserScan

mapper = {} #maps scans to indices and range values of 'largest' 
#object detected within a certain threshold (right now, .5)
#( it's half the most recent value that was not half less than the value prior.)
coolio = [] #is overwritten every scan, stores list of indices and ranges corresponding to largest object
def move_pos(scan):
    max = 0
    listscan.append(scan)
    currentLength = 0
    stable = scan.ranges[0]
    checkerold = []
    checkernew = [] #temp
    indiceold = []
    indicenew = []#temp
    for i, item in enumerate(scan.ranges):
        if scan.ranges[i] <= .5*(stable): #.5 can be changed to change the threshold for  detection
            if(currentLength==0):
                checkernew = []
                indicenew = []
            currentLength+=1
            if currentLength > max: #this part finds the largest object
                max = currentLength
            checkernew.append(item)
            indicenew.append(i)
        else:
            if(max==currentLength):
                checkerold = checkernew
                indiceold = indicenew
            currentLength = 0
            stable = scan.ranges[i]
      coolio.insert(0,checkerold)
      coolio.insert(1,indiceold)
      mapper[scan] = coolio
	    print (checkerold)
	    print (indiceold)
	    if(len(mapper.keys())> 2):
	    	checkScan(scan)

#tracks the change in the largest objects position
#I haven't been able to test some of the elses properly, since I had some trouble simulating some of the data
def checkScan(scan): #these if/elses are ugly
	valueList = []
	valueList = sorted(mapper.values())
	for i,  item in enumerate(valueList):
		if(i<len(valueList)-1 and i>len(valueList)-3):
			if(item[1]== valueList[i+1][1]):
				print("angle relative to scanner is same")
				if(item[0] == valueList[i+1][0]):
					print("position relative to scanner is same")
				else:
					print("object moved" + (item[0][0]-valueList[i+1][0][0]))
			else:
				change = item[1]-valueList[i+1][1]
				angle_change = scan.angle_increment*change
				print("we can move the robot by " + angle_change + " radians") 

def listener():
    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber("/scan", LaserScan, move_pos)
    rospy.spin()

if __name__ == '__main__':
    listener()

